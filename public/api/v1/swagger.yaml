swagger: '2.0'
info:
  description: |
    This is a levo api documentation.
  version: '1.0.0'
  title: Levo api
basePath: '/api/v1/'
paths:
  /drivers/:
    get:
      summary: Returns a list of all drivers
      description: gets all driver's info
      produces:
        - application/json
      responses:
        200:
          description: A list of drivers
          schema:
            type: array
            items:
          $ref: '#/definitions/Driver'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: path
          schema:
            # Body schema with atomic property examples
            type: object
            properties:
              user_id:
                type: integer
                format: int64
  /drivers/{id}:
    get:
      summary: Return a user by ID
      description: Returns one driver
      parameters:
        - name: id
          in: path
          require: true
          description: Desired driver id
          schema:
            type: integer
            format: int64
            minimum: 1
      produces:
        - application/json
      responses:
        200:
          description: Info of an especific driver
          schema:
            $ref: '#/definitions/Driver'
    delete:
      summary: Delete a user by ID
      description: Delete one driver
      parameters:
        - name: id
          in: path
          require: true
          description: Desired driver id
          schema:
            type: integer
            format: int64
            minimum: 1
  /vehicles/:
    get:
      summary: Returns a list of all vehicles
      description: gets all vehicles's info
      produces:
        - application/json
      responses:
        200:
          description: A list of vehicles
          schema:
            type: array
            items:
          $ref: '#/definitions/Vehicle'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: vehicle
          in: path
          required: true
          schema:
            # Body schema with atomic property examples
            type: object
            properties:
              vehicle:
                type: object
                properties:
                  company_id:
                    type: string
                    example: kkkk8
            # Alternatively, we can use a schema-level example
            example:
              vehicle:
                company_id: kajsdkasj
definitions:
  Driver:
    $ref: 'definitions/driver.yaml'
  DriverBody:
    $ref: 'definitions/driverBody.yaml'
  Vehicle:
    $ref: 'definitions/vehicle.yaml'